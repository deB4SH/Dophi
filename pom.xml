<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.b4sh</groupId>
    <artifactId>dophi</artifactId>
    <version>1.0</version>

    <packaging>pom</packaging>

    <properties>
        <docker.maven.plugin.version>0.24.0</docker.maven.plugin.version>
        <docker.url>docker.0x09.de</docker.url>
        <docker.autopull>true</docker.autopull>
        <docker.skip>false</docker.skip>
        <docker.nocache>false</docker.nocache>
        <docker.verbose>true</docker.verbose>
        <docker.logging>true</docker.logging>
        <docker.hostname>${artifactId}</docker.hostname>
        <docker.files.base.directory>${project.basedir}/src/docker</docker.files.base.directory>
        <docker.files.build.directory>${project.build.directory}/docker-files</docker.files.build.directory>
        <docker.run.wait.timeout>120000</docker.run.wait.timeout>
        <docker.push.registry>${docker.url}</docker.push.registry>
        <image.name>${docker.url}/deb4sh/dophi:${project.version}</image.name>
        <game.port>62001</game.port>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.version}</version>
                    <configuration>
                        <machine> <!-- DOCKER MACHINE WINDOWS CONFIGURATION -->
                            <name>rimworld</name>
                            <autoCreate>true</autoCreate>
                            <createOptions>
                                <driver>virtualbox</driver>
                                <virtualbox-cpu-count>4</virtualbox-cpu-count>
                                <engine-insecure-registry>${docker.url}</engine-insecure-registry>
                            </createOptions>
                        </machine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy dockerfiles</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${docker.files.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${docker.files.base.directory}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoPull>${docker.autopull}</autoPull>
                    <verbose>${docker.verbose}</verbose>
                    <!-- image definition -->
                    <images>
                        <image>
                            <name>${image.name}</name>
                            <alias>${docker.hostname}</alias>
                            <build>
                                <nocache>${docker.nocache}</nocache>
                                <compression>none</compression>
                                <dockerFileDir>${docker.files.build.directory}</dockerFileDir>
                            </build>
                            <run>
                                <skip>${docker.skip}</skip>
                                <namingStrategy>alias</namingStrategy>
                                <hostname>${docker.hostname}</hostname>
                                <network>
                                    <mode>bridge</mode>
                                    <alias>dophi-rimworld</alias>
                                </network>
                                <ports>
                                    <port>${game.port}:16180</port>
                                </ports>
                                <log>
                                    <enabled>${docker.logging}</enabled>
                                    <prefix>dophi-rimworld:</prefix>
                                    <date>DEFAULT</date>
                                </log>
                                <wait>
                                    <log>.*please run the service.*</log>
                                    <time>${docker.run.wait.timeout}</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>